"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Sequelize = require("sequelize");
const schema = {
    id: { type: Sequelize.INTEGER, unique: true, autoIncrement: true, primaryKey: true, displayName: 'id' },
    siteName: { type: Sequelize.STRING, allowNull: true, displayName: '站点名称' },
    siteSlug: { type: Sequelize.STRING, allowNull: true, displayName: '站点slug' },
    authorName: { type: Sequelize.STRING, allowNull: true, displayName: '作者' },
    postId: { type: Sequelize.STRING, allowNull: true, displayName: 'postId' },
    url: { type: Sequelize.TEXT, allowNull: false },
    title: { type: Sequelize.TEXT, allowNull: false, displayName: '标题' },
    summary: { type: Sequelize.TEXT, allowNull: true },
    cover: { type: Sequelize.TEXT, allowNull: true },
    content: { type: Sequelize.TEXT, allowNull: true },
    summaryAuto: { type: Sequelize.TEXT, allowNull: true },
    publishDate: { type: Sequelize.DATE, allowNull: true },
    isShow: { type: Sequelize.BOOLEAN, allowNull: true },
    isCart: { type: Sequelize.BOOLEAN, allowNull: true },
    extra: { type: Sequelize.JSONB, allowNull: true },
    language: { type: Sequelize.STRING, allowNull: true, displayName: '语言' },
};
const schemaOption = {
    indexes: [
        {
            unique: false,
            fields: ['publishDate']
        },
        {
            unique: false,
            fields: ['siteSlug']
        },
        {
            unique: false,
            fields: ['language']
        }
    ],
    timestamps: true
};
exports.default = (app) => {
    let news = app.model.define('News', schema, schemaOption);
    // News.classLevelMethod = function () {
    //     return 'foo';
    // };
    // // Adding an instance level method
    // News.prototype.instanceLevelMethod = function () {
    //     return 'bar';
    // };
    app.logger.info(`model news loaded`);
    return news;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5ld3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBdUM7QUEyQnZDLE1BQU0sTUFBTSxHQUFHO0lBQ1gsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtJQUN2RyxRQUFRLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUU7SUFDMUUsUUFBUSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFO0lBQzVFLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtJQUMxRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUU7SUFDMUUsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRTtJQUMvQyxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUU7SUFDcEUsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRTtJQUNsRCxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFO0lBQ2hELE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUU7SUFDbEQsV0FBVyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRTtJQUN0RCxXQUFXLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFO0lBQ3RELE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUU7SUFDcEQsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRTtJQUNwRCxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFO0lBQ2pELFFBQVEsRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtDQUMxRSxDQUFDO0FBRUYsTUFBTSxZQUFZLEdBQUc7SUFDakIsT0FBTyxFQUFFO1FBQ0w7WUFDSSxNQUFNLEVBQUUsS0FBSztZQUNiLE1BQU0sRUFBRSxDQUFDLGFBQWEsQ0FBQztTQUMxQjtRQUNEO1lBQ0ksTUFBTSxFQUFFLEtBQUs7WUFDYixNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUM7U0FDdkI7UUFDRDtZQUNJLE1BQU0sRUFBRSxLQUFLO1lBQ2IsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDO1NBQ3ZCO0tBQ0o7SUFDRCxVQUFVLEVBQUUsSUFBSTtDQUNuQixDQUFDO0FBSUYsa0JBQWUsQ0FBQyxHQUFnQixFQUFFLEVBQUU7SUFDaEMsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQXVCLE1BQU0sRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDaEYsd0NBQXdDO0lBQ3hDLG9CQUFvQjtJQUNwQixLQUFLO0lBRUwscUNBQXFDO0lBQ3JDLHFEQUFxRDtJQUNyRCxvQkFBb0I7SUFDcEIsS0FBSztJQUNMLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUE7SUFDcEMsTUFBTSxDQUFDLElBQUksQ0FBQztBQUNoQixDQUFDLENBQUEifQ==